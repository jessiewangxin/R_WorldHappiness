shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
world_happiness<-read.csv('./Data/2021.csv')
library(dplyr)
ggplot2() + geom_map( world_happiness, map, aes() )
library(ggplot2)
ggplot2() + geom_map( world_happiness, map, aes() )
ggplot() + geom_map( world_happiness, map, aes() )
ggplot(data=world_happiness) + geom_sf()
View(world_happiness)
View(world_happiness)
world_happiness %>%
summarise(group_by(Regional.indicator), mean_score = avg(Ladder.score))
world_happiness %>%
summarise(group_by(Regional.indicator), mean_score = mean(Ladder.score))
top_n(world_happiness, 5)
world_happiness %>%
select(Regional.indicator, Ladder.score) %>%
summarise(group_by(Regional.indicator), mean_score = mean(Ladder.score))
world_happiness %>%
select(Regional.indicator, Ladder.score)
summarise(.,mean_score = mean(Ladder.score))
world_happiness %>%
select(Regional.indicator, Ladder.score) %>%
group_by() %>%
summarise(.,mean_score = mean(Ladder.score))
world_happiness %>%
select(Regional.indicator, Ladder.score) %>%
group_by(Ladder.score) %>%
summarise(.,mean_score = mean(Ladder.score))
world_happiness %>%
select(Regional.indicator, Ladder.score) %>%
group_by(Regional.indicator) %>%
summarise(.,mean_score = mean(Ladder.score))
ggplot(regional_scores,aes(Regional.indicator)) +
geom_bar(position='dodge', stat="count",aes(fill=win,)) +
theme_bw()
regional_scores =
world_happiness %>%
select(Regional.indicator, Ladder.score) %>%
group_by(Regional.indicator) %>%
summarise(., mean_score = mean(Ladder.score))
ggplot(regional_scores,aes(Regional.indicator)) +
geom_bar(position='dodge', stat="count",aes(fill=win,)) +
theme_bw()
ggplot(regional_scores,aes(Regional.indicator)) +
geom_bar(position='dodge', stat="count",aes(fill=Ladder.score,)) +
theme_bw()
ggplot(regional_scores,aes(Regional.indicator)) +
geom_bar(position='dodge', stat="count",aes(fill=mean_score,)) +
theme_bw()
ggplot(regional_scores,aes(Regional.indicator)) +
geom_bar(position='dodge', stat="sum",aes(fill=mean_score,)) +
theme_bw()
ount
ggplot(regional_scores,aes(Regional.indicator)) +
geom_bar(position='dodge', stat="count",aes(fill=mean_score,)) +
theme_bw()
ggplot(regional_scores,aes(Regional.indicator)) +
geom_bar(position='dodge', stat="identity",aes(fill=mean_score,)) +
theme_bw()
ggplot(regional_scores,aes(x=Regional.indicator , y=mean_score)) +
geom_bar(position='dodge', stat="count",aes(fill=mean_score,)) +
theme_bw()
ggplot(regional_scores,aes(x=Regional.indicator , y=mean_score)) +
geom_bar(position='dodge', stat="identity",aes(fill=mean_score,)) +
theme_bw()
ggplot(regional_scores,aes(x=Regional.indicator , y=mean_score)) +
geom_bar(position='dodge', stat="identity",aes(color=Regional.indicator)) +
theme_bw()
ggplot(regional_scores,aes(x=Regional.indicator , y=mean_score)) +
geom_bar(position='dodge', stat="identity",aes(fill=Regional.indicator)) +
theme_bw()
temp = world_happiness %>%
select(Regional.indicator, Ladder.score) %>%
mutate(newcol = 1)
temp
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
regional_scores =
world_happiness %>%
select(Regional.indicator, Ladder.score) %>%
group_by(Regional.indicator) %>%
summarise(., mean_score = mean(Ladder.score))
regional_scores
ggplot(regional_scores,aes(x=Regional.indicator , y=mean_score)) +
geom_bar(position='dodge', stat="identity",aes(fill=Regional.indicator)) +
theme_bw()
runApp()
runApp()
runApp()
ggplot(world_happiness, aes(x=Ladder.score, y="Healthy life expectancy")) +
geom_point(size=2, shape=23, color = Regional.indicator)
ggplot(world_happiness, aes(x=Ladder.score, y="Healthy life expectancy",color = Regional.indicator)) +
geom_point(size=2, shape=23)
ggplot(world_happiness, aes(x=Ladder.score, y="Healthy life expectancy")) +
geom_point(size=2, shape=23)
View(world_happiness)
ggplot(world_happiness, aes(x=Ladder.score, y=Healthy.life.expectancy)) +
geom_point(size=2, shape=23)
ggplot(world_happiness, aes(x=Ladder.score, y=Healthy.life.expectancy)) +
geom_point(size=2, shape=1)
ggplot(world_happiness, aes(x=Ladder.score, y=Healthy.life.expectancy, fill = Regional.indicator)) +
geom_point(size=2, shape=1)
ggplot(world_happiness, aes(x=Ladder.score, y=Healthy.life.expectancy, color = Regional.indicator)) +
geom_point(size=2, shape=1)
ggplot(world_happiness, aes(x=Ladder.score, y=Healthy.life.expectancy, color = Regional.indicator)) +
geom_point(size=2, shape=1,aes(fill=Regional.indicator))
ggplot(world_happiness, aes(x=Ladder.score, y=Healthy.life.expectancy, color = Regional.indicator)) +
geom_point(size=2, shape=1,aes(fill=Regional.indicator)) +
theme_bw()
ggplot(world_happiness, aes(x=Ladder.score, y=Healthy.life.expectancy, fill = Regional.indicator)) +
geom_point(size=2, shape=1,aes(fill=Regional.indicator)) +
theme_bw()
color
ggplot(world_happiness, aes(x=Ladder.score, y=Healthy.life.expectancy, color = Regional.indicator)) +
geom_point(size=2, shape=1,aes(fill=Regional.indicator)) +
theme_bw()
runApp()
runApp()
View(world_happiness)
View(world_happiness)
gsub(" ",".", "Logged GDP per capita)
rfw
w
fixed = TRUE
str_replace("Logged GDP per capita", " ", ".")
library(stringr)
str_replace("Logged GDP per capita", " ", ".")
str_replace_all("Logged GDP per capita", " ", ".")
ggplot(world_happiness, aes(x=Ladder.score, y=Healthy.life.expectancy, color = Regional.indicator)) +
geom_point(size=2, shape=1,aes(fill=Regional.indicator)) +
theme_bw()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
temp = "Logged GDP per capita"
temp2 = str_replace_all(temp, " ", ".")
temp2
world_happiness$temp2
temp3 = as.name(temp2)
world_happiness$temp3
View(world_happiness)
world_happiness$col_names
colnames(world_happiness)
temp2
"Logged.GDP.per.capita" == temp2
grep(temp2, colnames(world_happiness))
world_happiness[7]
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
y_variable = world_happiness$Healthy.life.expectancy
output$plot1 <- renderPlot({
ggplot(world_happiness, aes(x=Ladder.score, y=y_variable, color = Regional.indicator)) +
geom_point(size=2, shape=1,aes(fill=Regional.indicator)) +
theme_bw()
})
runApp()
runApp()
runApp()
runApp()
temp = "Logged GDP per capita"
temp2 = str_replace_all(temp, " ", ".")
grep(str_replace_all(temp, " ", "."), colnames(world_happiness))
world_happiness[7]
runApp()
runApp()
world_happiness[7].colname
colnames(world_happiness)[7]
runApp()
which(colnames(world_happiness)==temp2)
runApp()
runApp()
runApp()
runApp()
colnames(world_happiness)[7]
runApp()
runApp()
col_name <- reactive({
colnames(world_happiness)[grep(str_replace_all(input$variables, " ", "."), colnames(world_happiness))]
})
input$variables
runApp()
runApp()
runApp()
col_name <- reactive({input$variables})
runApp()
runApp()
runApp()
runApp()
colnames(world_happiness$Healthy.life.expectancy)
world_happiness$Healthy.life.expectancy
col_name = colnames(world_happiness)[1]
col_name
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
world_happiness2 = world_happiness %>%
select(Ladder.score, col_name, Regional.indicator)
ggplot(world_happiness2, aes(x=Ladder.score, y=Healthy.life.expectancy, color = Regional.indicator)) +
geom_point(size=2, shape=1,aes(fill=Regional.indicator)) +
theme_bw()
world_happiness2 = world_happiness %>%
select(Ladder.score, Healthy.life.expectancy, Regional.indicator)
ggplot(world_happiness2, aes(x=Ladder.score, y=Healthy.life.expectancy, color = Regional.indicator)) +
geom_point(size=2, shape=1,aes(fill=Regional.indicator)) +
theme_bw()
ggplot(world_happiness2, aes(x=Ladder.score, y=., color = Regional.indicator)) +
geom_point(size=2, shape=1,aes(fill=Regional.indicator)) +
theme_bw()
ggplot(world_happiness2, aes(x=Ladder.score, y=colnames(world_happiness2)[1], color = Regional.indicator)) +
geom_point(size=2, shape=1,aes(fill=Regional.indicator)) +
theme_bw()
ggplot(world_happiness2, aes(x=Ladder.score, y=colnames(world_happiness2)[2], color = Regional.indicator)) +
geom_point(size=2, shape=1,aes(fill=Regional.indicator)) +
theme_bw()
ggplot(world_happiness2, aes(x=Ladder.score, y=Healthy.life.expectancy, color = Regional.indicator)) +
geom_point(size=2, shape=1,aes(fill=Regional.indicator)) +
theme_bw()
world_happiness2 = world_happiness %>%
select(Ladder.score, Healthy.life.expectancy, Regional.indicator) %>%
rename(Healthy.life.expectancy = y_col)
ggplot(world_happiness2, aes(x=Ladder.score, y=y_col, color = Regional.indicator)) +
geom_point(size=2, shape=1,aes(fill=Regional.indicator)) +
theme_bw()
world_happiness2
world_happiness2 = world_happiness %>%
select(Ladder.score, Healthy.life.expectancy, Regional.indicator) %>%
rename(y_col = Healthy.life.expectancy = )
world_happiness2 = world_happiness %>%
select(Ladder.score, Healthy.life.expectancy, Regional.indicator) %>%
rename(y_col = Healthy.life.expectancy)
ggplot(world_happiness2, aes(x=Ladder.score, y=y_col, color = Regional.indicator)) +
geom_point(size=2, shape=1,aes(fill=Regional.indicator)) +
theme_bw()
runApp()
runApp()
world_happiness2 = world_happiness %>%
select(Ladder.score, Healthy.life.expectancy, Regional.indicator) %>%
rename(y_col = Healthy.life.expectancy)
output$plot1 <- renderPlot({
ggplot(world_happiness2, aes(x=Ladder.score, y=Healthy.life.expectancy, color = Regional.indicator)) +
geom_point(size=2, shape=1,aes(fill=Regional.indicator)) +
theme_bw()
})
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
unique(world_happiness$Regional.indicator)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
## Only run examples in interactive R sessions
if (interactive()) {
ui <- fluidPage(
checkboxGroupInput("variable", "Variables to show:",
c("Cylinders" = "cyl",
"Transmission" = "am",
"Gears" = "gear")),
tableOutput("data")
)
server <- function(input, output) {
output$data <- renderTable({
mtcars[, c("mpg", input$variable), drop = FALSE]
}, rownames = TRUE)
}
shinyApp(ui, server)
}
View(world_happiness)
View(world_happiness2)
View(world_happiness)
runApp()
View(world_happiness)
View(world_happiness2)
runApp()
View(world_happiness2)
View(world_happiness2)
runApp()
runApp()
runApp()
runApp()
View(world_happiness2)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(world_happiness2)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
